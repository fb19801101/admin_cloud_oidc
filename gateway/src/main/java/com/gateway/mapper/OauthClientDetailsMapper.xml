<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gateway.mapper.OauthClientDetailsMapper">
  <resultMap id="BaseResultMap" type="com.gateway.entity.OauthClientDetails">
    <id column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="resource_ids" jdbcType="VARCHAR" property="resourceIds" />
    <result column="client_secret" jdbcType="VARCHAR" property="clientSecret" />
    <result column="scope" jdbcType="VARCHAR" property="scope" />
    <result column="authorized_grant_types" jdbcType="VARCHAR" property="authorizedGrantTypes" />
    <result column="web_server_redirect_uri" jdbcType="VARCHAR" property="webServerRedirectUri" />
    <result column="authorities" jdbcType="VARCHAR" property="authorities" />
    <result column="access_token_validity" jdbcType="INTEGER" property="accessTokenValidity" />
    <result column="refresh_token_validity" jdbcType="INTEGER" property="refreshTokenValidity" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="archived" jdbcType="BIT" property="archived" />
    <result column="trusted" jdbcType="BIT" property="trusted" />
    <result column="autoapprove" jdbcType="VARCHAR" property="autoapprove" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gateway.entity.OauthClientDetails">
    <result column="additional_information" jdbcType="LONGVARCHAR" property="additionalInformation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Model_Where_Clause">
    <where>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=VARCHAR}
      </if>
      <if test="record.resourceIds != null">
        and resource_ids = #{record.resourceIds,jdbcType=VARCHAR}
      </if>
      <if test="record.clientSecret != null">
        and client_secret = #{record.clientSecret,jdbcType=VARCHAR}
      </if>
      <if test="record.scope != null">
        and `scope` = #{record.scope,jdbcType=VARCHAR}
      </if>
      <if test="record.authorizedGrantTypes != null">
        and authorized_grant_types = #{record.authorizedGrantTypes,jdbcType=VARCHAR}
      </if>
      <if test="record.webServerRedirectUri != null">
        and web_server_redirect_uri = #{record.webServerRedirectUri,jdbcType=VARCHAR}
      </if>
      <if test="record.authorities != null">
        and authorities = #{record.authorities,jdbcType=VARCHAR}
      </if>
      <if test="record.accessTokenValidity != null">
        and access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER}
      </if>
      <if test="record.refreshTokenValidity != null">
        and refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER}
      </if>
      <if test="record.createTime != null">
        and create_time = #{record.createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="record.archived != null">
        and archived = #{record.archived,jdbcType=BIT}
      </if>
      <if test="record.trusted != null">
        and `trusted` = #{record.trusted,jdbcType=BIT}
      </if>
      <if test="record.autoapprove != null">
        and autoapprove = #{record.autoapprove,jdbcType=VARCHAR}
      </if>
      <if test="record.additionalInformation != null">
        and additional_information = #{record.additionalInformation,jdbcType=LONGVARCHAR}
      </if>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Model_Query_Clause">
    <where>
      <if test="record.clientId != null">
        client_id like concat('%', #{record.clientId,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.resourceIds != null">
        and resource_ids like concat('%', #{record.resourceIds,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.clientSecret != null">
        and client_secret like concat('%', #{record.clientSecret,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.scope != null">
        and `scope` like concat('%', #{record.scope,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.authorizedGrantTypes != null">
        and authorized_grant_types like concat('%', #{record.authorizedGrantTypes,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.webServerRedirectUri != null">
        and web_server_redirect_uri like concat('%', #{record.webServerRedirectUri,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.authorities != null">
        and authorities like concat('%', #{record.authorities,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.accessTokenValidity != null">
        and access_token_validity like concat('%', #{record.accessTokenValidity,jdbcType=INTEGER}, '%')
      </if>
      <if test="record.refreshTokenValidity != null">
        and refresh_token_validity like concat('%', #{record.refreshTokenValidity,jdbcType=INTEGER}, '%')
      </if>
      <if test="record.createTime != null">
        and create_time like concat('%', #{record.createTime,jdbcType=TIMESTAMP}, '%')
      </if>
      <if test="record.archived != null">
        and archived like concat('%', #{record.archived,jdbcType=BIT}, '%')
      </if>
      <if test="record.trusted != null">
        and `trusted` like concat('%', #{record.trusted,jdbcType=BIT}, '%')
      </if>
      <if test="record.autoapprove != null">
        and autoapprove like concat('%', #{record.autoapprove,jdbcType=VARCHAR}, '%')
      </if>
      <if test="record.additionalInformation != null">
        and additional_information like concat('%', #{record.additionalInformation,jdbcType=LONGVARCHAR}, '%')
      </if>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <sql id="Model_Clause_Offset">
	  <if test="_parameter != null">
	    <if test="_parameter.containsKey('limit') and limit != null">
	      <choose>
	        <when test="_parameter.containsKey('offset') and offset != null">
	          order by client_id asc limit #{offset}, #{limit};
	        </when>
	        <otherwise>
	          order by client_id asc limit  #{limit};
	        </otherwise>
	      </choose>
	    </if>
    </if>
  </sql>
  <sql id="Model_Clause_Order">
    <if test="_parameter != null">
      <choose>
        <when test="_parameter.containsKey('field') and field != null">
          order by ${field} asc;
        </when>
        <otherwise>
          order by client_id asc;
        </otherwise>
      </choose>
    </if>
  </sql>
  <sql id="Base_Column_List">
    client_id, resource_ids, client_secret, `scope`, authorized_grant_types, web_server_redirect_uri, 
    authorities, access_token_validity, refresh_token_validity, create_time, archived, 
    `trusted`, autoapprove
  </sql>
  <sql id="Blob_Column_List">
    additional_information
  </sql>
  <sql id="Param_Column_List">
    <choose>
      <when test="_parameter != null">
        <if test="_parameter.containsKey('fields') and fields != null">
          ${fields}
        </if>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
  </sql>
  <sql id="Param_Where_Clause_Like">
    <if test="_parameter != null">
      <if test="_parameter.containsKey('field') and field != null">
        <where>
          <if test="_parameter.containsKey('value') and value != null">
            ${field} like concat('%', #{value}, '%')
          </if>
        </where>
        <if test="_parameter.containsKey('limit') and limit != null">
          <choose>
            <when test="_parameter.containsKey('offset') and offset != null">
              order by ${field} asc limit #{offset}, #{limit};
            </when>
            <otherwise>
              order by ${field} asc limit  #{limit};
            </otherwise>
          </choose>
        </if>
      </if>
    </if>
  </sql>
  <sql id="Param_Where_Clause_Equal">
    <if test="_parameter != null">
      <if test="_parameter.containsKey('field') and field != null">
        <where>
          <if test="_parameter.containsKey('value') and value != null">
            ${field} = #{value}
          </if>
          <if test="_parameter.containsKey('value1') and _parameter.containsKey('value2')">
            <if test="value1 != null and value2 != null">
              ${field} between #{value1} and #{value2}
            </if>
          </if>
        </where>
        <if test="_parameter.containsKey('limit') and limit != null">
          <choose>
            <when test="_parameter.containsKey('offset') and offset != null">
              order by ${field} asc limit #{offset}, #{limit};
            </when>
            <otherwise>
              order by ${field} asc limit  #{limit};
            </otherwise>
          </choose>
        </if>
      </if>
    </if>
  </sql>
  <sql id="Param_Where_Clause_Sql">
    <where>
      <choose>
        <when test="_parameter != null">
          <if test="_parameter.containsKey('sql') and sql != null">
            ${sql}
          </if>
        </when>
        <otherwise>
          id is null
        </otherwise>
      </choose>
    </where>
    <include refid="Model_Clause_Offset" />
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gateway.entity.OauthClientDetailsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oauth_client_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gateway.entity.OauthClientDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oauth_client_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oauth_client_details
    where client_id = #{clientId,jdbcType=VARCHAR}
  </select>
  <select id="selectByMinPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oauth_client_details
    where id = (select min(id) from oauth_client_details)
  </select>
  <select id="selectByMaxPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oauth_client_details
    where id = (select max(id) from oauth_client_details)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from oauth_client_details
    where client_id = #{clientId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.gateway.entity.OauthClientDetailsExample">
    delete from oauth_client_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteAllModel">
    delete from oauth_client_details
  </delete>
  <insert id="insert" keyColumn="client_id" keyProperty="clientId" parameterType="com.gateway.entity.OauthClientDetails" useGeneratedKeys="true">
    insert into oauth_client_details (client_id, resource_ids, client_secret, `scope`,
      authorized_grant_types, web_server_redirect_uri, 
      authorities, access_token_validity, refresh_token_validity, 
      create_time, archived, `trusted`, 
      autoapprove, additional_information)
    values (#{client_id,jdbcType=VARCHAR}, #{resourceIds,jdbcType=VARCHAR}, #{clientSecret,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR},
      #{authorizedGrantTypes,jdbcType=VARCHAR}, #{webServerRedirectUri,jdbcType=VARCHAR}, 
      #{authorities,jdbcType=VARCHAR}, #{accessTokenValidity,jdbcType=INTEGER}, #{refreshTokenValidity,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{archived,jdbcType=BIT}, #{trusted,jdbcType=BIT}, 
      #{autoapprove,jdbcType=VARCHAR}, #{additionalInformation,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="client_id" keyProperty="clientId" parameterType="com.gateway.entity.OauthClientDetails" useGeneratedKeys="true">
    insert into oauth_client_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        client_id,
      </if>
      <if test="resourceIds != null">
        resource_ids,
      </if>
      <if test="clientSecret != null">
        client_secret,
      </if>
      <if test="scope != null">
        `scope`,
      </if>
      <if test="authorizedGrantTypes != null">
        authorized_grant_types,
      </if>
      <if test="webServerRedirectUri != null">
        web_server_redirect_uri,
      </if>
      <if test="authorities != null">
        authorities,
      </if>
      <if test="accessTokenValidity != null">
        access_token_validity,
      </if>
      <if test="refreshTokenValidity != null">
        refresh_token_validity,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="archived != null">
        archived,
      </if>
      <if test="trusted != null">
        `trusted`,
      </if>
      <if test="autoapprove != null">
        autoapprove,
      </if>
      <if test="additionalInformation != null">
        additional_information,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        #{client_id,jdbcType=VARCHAR},
      </if>
      <if test="resourceIds != null">
        #{resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="clientSecret != null">
        #{clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        #{scope,jdbcType=VARCHAR},
      </if>
      <if test="authorizedGrantTypes != null">
        #{authorizedGrantTypes,jdbcType=VARCHAR},
      </if>
      <if test="webServerRedirectUri != null">
        #{webServerRedirectUri,jdbcType=VARCHAR},
      </if>
      <if test="authorities != null">
        #{authorities,jdbcType=VARCHAR},
      </if>
      <if test="accessTokenValidity != null">
        #{accessTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="refreshTokenValidity != null">
        #{refreshTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="archived != null">
        #{archived,jdbcType=BIT},
      </if>
      <if test="trusted != null">
        #{trusted,jdbcType=BIT},
      </if>
      <if test="autoapprove != null">
        #{autoapprove,jdbcType=VARCHAR},
      </if>
      <if test="additionalInformation != null">
        #{additionalInformation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gateway.entity.OauthClientDetailsExample" resultType="java.lang.Long">
    select count(*) from oauth_client_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countByModel" parameterType="com.gateway.entity.OauthClientDetails" resultType="java.lang.Long">
    select count(*) from oauth_client_details
    <if test="_parameter != null">
      <include refid="Model_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oauth_client_details
    <set>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceIds != null">
        resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="record.clientSecret != null">
        client_secret = #{record.clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="record.scope != null">
        `scope` = #{record.scope,jdbcType=VARCHAR},
      </if>
      <if test="record.authorizedGrantTypes != null">
        authorized_grant_types = #{record.authorizedGrantTypes,jdbcType=VARCHAR},
      </if>
      <if test="record.webServerRedirectUri != null">
        web_server_redirect_uri = #{record.webServerRedirectUri,jdbcType=VARCHAR},
      </if>
      <if test="record.authorities != null">
        authorities = #{record.authorities,jdbcType=VARCHAR},
      </if>
      <if test="record.accessTokenValidity != null">
        access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="record.refreshTokenValidity != null">
        refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.archived != null">
        archived = #{record.archived,jdbcType=BIT},
      </if>
      <if test="record.trusted != null">
        `trusted` = #{record.trusted,jdbcType=BIT},
      </if>
      <if test="record.autoapprove != null">
        autoapprove = #{record.autoapprove,jdbcType=VARCHAR},
      </if>
      <if test="record.additionalInformation != null">
        additional_information = #{record.additionalInformation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update oauth_client_details
    set client_id = #{record.clientId,jdbcType=VARCHAR},
      resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
      client_secret = #{record.clientSecret,jdbcType=VARCHAR},
      `scope` = #{record.scope,jdbcType=VARCHAR},
      authorized_grant_types = #{record.authorizedGrantTypes,jdbcType=VARCHAR},
      web_server_redirect_uri = #{record.webServerRedirectUri,jdbcType=VARCHAR},
      authorities = #{record.authorities,jdbcType=VARCHAR},
      access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER},
      refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      archived = #{record.archived,jdbcType=BIT},
      `trusted` = #{record.trusted,jdbcType=BIT},
      autoapprove = #{record.autoapprove,jdbcType=VARCHAR},
      additional_information = #{record.additionalInformation,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oauth_client_details
    set client_id = #{record.clientId,jdbcType=VARCHAR},
      resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
      client_secret = #{record.clientSecret,jdbcType=VARCHAR},
      `scope` = #{record.scope,jdbcType=VARCHAR},
      authorized_grant_types = #{record.authorizedGrantTypes,jdbcType=VARCHAR},
      web_server_redirect_uri = #{record.webServerRedirectUri,jdbcType=VARCHAR},
      authorities = #{record.authorities,jdbcType=VARCHAR},
      access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER},
      refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      archived = #{record.archived,jdbcType=BIT},
      `trusted` = #{record.trusted,jdbcType=BIT},
      autoapprove = #{record.autoapprove,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gateway.entity.OauthClientDetails">
    update oauth_client_details
    <set>
      <if test="resourceIds != null">
        resource_ids = #{resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="clientSecret != null">
        client_secret = #{clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        `scope` = #{scope,jdbcType=VARCHAR},
      </if>
      <if test="authorizedGrantTypes != null">
        authorized_grant_types = #{authorizedGrantTypes,jdbcType=VARCHAR},
      </if>
      <if test="webServerRedirectUri != null">
        web_server_redirect_uri = #{webServerRedirectUri,jdbcType=VARCHAR},
      </if>
      <if test="authorities != null">
        authorities = #{authorities,jdbcType=VARCHAR},
      </if>
      <if test="accessTokenValidity != null">
        access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="refreshTokenValidity != null">
        refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="archived != null">
        archived = #{archived,jdbcType=BIT},
      </if>
      <if test="trusted != null">
        `trusted` = #{trusted,jdbcType=BIT},
      </if>
      <if test="autoapprove != null">
        autoapprove = #{autoapprove,jdbcType=VARCHAR},
      </if>
      <if test="additionalInformation != null">
        additional_information = #{additionalInformation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where client_id = #{clientId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gateway.entity.OauthClientDetails">
    update oauth_client_details
    set resource_ids = #{resourceIds,jdbcType=VARCHAR},
      client_secret = #{clientSecret,jdbcType=VARCHAR},
      `scope` = #{scope,jdbcType=VARCHAR},
      authorized_grant_types = #{authorizedGrantTypes,jdbcType=VARCHAR},
      web_server_redirect_uri = #{webServerRedirectUri,jdbcType=VARCHAR},
      authorities = #{authorities,jdbcType=VARCHAR},
      access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
      refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      archived = #{archived,jdbcType=BIT},
      `trusted` = #{trusted,jdbcType=BIT},
      autoapprove = #{autoapprove,jdbcType=VARCHAR},
      additional_information = #{additionalInformation,jdbcType=LONGVARCHAR}
    where client_id = #{clientId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gateway.entity.OauthClientDetails">
    update oauth_client_details
    set resource_ids = #{resourceIds,jdbcType=VARCHAR},
      client_secret = #{clientSecret,jdbcType=VARCHAR},
      `scope` = #{scope,jdbcType=VARCHAR},
      authorized_grant_types = #{authorizedGrantTypes,jdbcType=VARCHAR},
      web_server_redirect_uri = #{webServerRedirectUri,jdbcType=VARCHAR},
      authorities = #{authorities,jdbcType=VARCHAR},
      access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
      refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      archived = #{archived,jdbcType=BIT},
      `trusted` = #{trusted,jdbcType=BIT},
      autoapprove = #{autoapprove,jdbcType=VARCHAR}
    where client_id = #{clientId,jdbcType=VARCHAR}
  </update>
  <select id="selectAllModel" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oauth_client_details
    <include refid="Model_Clause_Offset" />
  </select>
  <select id="countAllModel" resultType="java.lang.Long">
    select count(*) from oauth_client_details
  </select>
  <select id="selectByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oauth_client_details
    <include refid="Model_Where_Clause" />
  </select>
  <select id="countBySelectParam" parameterType="map" resultType="java.lang.Long">
    select count(*) from oauth_client_details
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oauth_client_details
    <include refid="Model_Query_Clause" />
  </select>
  <select id="countByQueryParam" parameterType="map" resultType="java.lang.Long">
    select count(*) from oauth_client_details
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oauth_client_details
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="countBySelectCondition" resultType="java.lang.Long">
    select count(*) from oauth_client_details
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from oauth_client_details
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="countByQueryCondition" resultType="java.lang.Long">
    select count(*) from oauth_client_details
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from oauth_client_details
    <include refid="Model_Where_Clause" />
  </select>
  <select id="queryFieldsByParam" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from oauth_client_details
    <include refid="Model_Query_Clause" />
  </select>
  <select id="selectFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from oauth_client_details
    <include refid="Param_Where_Clause_Equal" />
  </select>
  <select id="queryFieldsByCondition" resultMap="BaseResultMap">
    select
    <include refid="Param_Column_List" />
    from oauth_client_details
    <include refid="Param_Where_Clause_Like" />
  </select>
  <select id="selectBySql" resultMap="BaseResultMap" statementType="STATEMENT">
    select
    <include refid="Base_Column_List" />
    from oauth_client_details
    <include refid="Param_Where_Clause_Sql" />
  </select>
  <select id="selectFieldsBySql" resultMap="BaseResultMap" statementType="STATEMENT">
    select
    <include refid="Param_Column_List" />
    from oauth_client_details
    <include refid="Param_Where_Clause_Sql" />
  </select>
</mapper>